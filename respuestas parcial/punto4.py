# -*- coding: utf-8 -*-
"""punto4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NQvql7HkCQjSd6svsvtCOgOP_cEbTLqK
"""

import numpy as np
import matplotlib.pyplot as plt

# Datos dados
x_values = np.array([1, 2, 3, 4, 5])
y_values = np.array([5.5, 0, 2.5, 0.8, -2])
point = 3.2

# Función para el polinomio de interpolación de Lagrange
def lagrange_interpolation(x, y, point, degree):
    n = len(x)
    result = 0
    for i in range(n):
        term = y[i]
        for j in range(n):
            if j != i:
                term *= (point - x[j]) / (x[i] - x[j])
        result += term
    return result

# Grado 1
poly_degree_1 = lagrange_interpolation(x_values[:2], y_values[:2], point, 1)
print("Grado 1:", poly_degree_1)

# Grado 2
poly_degree_2 = lagrange_interpolation(x_values[:3], y_values[:3], point, 2)
print("Grado 2:", poly_degree_2)

# Grado 3
poly_degree_3 = lagrange_interpolation(x_values[:4], y_values[:4], point, 3)
print("Grado 3:", poly_degree_3)

# Grado 4
poly_degree_4 = lagrange_interpolation(x_values, y_values, point, 4)
print("Grado 4:", poly_degree_4)

# Graficar
plt.figure(figsize=(10, 6))

# Grado 1
plt.subplot(2, 2, 1)
plt.plot(x_values[:2], y_values[:2], 'ro', label='Datos')
plt.plot(point, poly_degree_1, 'bo', label='Estimación')
plt.title('Grado 1')
plt.legend()

# Grado 2
plt.subplot(2, 2, 2)
plt.plot(x_values[:3], y_values[:3], 'ro', label='Datos')
plt.plot(point, poly_degree_2, 'bo', label='Estimación')
plt.title('Grado 2')
plt.legend()

# Grado 3
plt.subplot(2, 2, 3)
plt.plot(x_values[:4], y_values[:4], 'ro', label='Datos')
plt.plot(point, poly_degree_3, 'bo', label='Estimación')
plt.title('Grado 3')
plt.legend()

# Grado 4
plt.subplot(2, 2, 4)
plt.plot(x_values, y_values, 'ro', label='Datos')
plt.plot(point, poly_degree_4, 'bo', label='Estimación')
plt.title('Grado 4')
plt.legend()

plt.tight_layout()
plt.show()